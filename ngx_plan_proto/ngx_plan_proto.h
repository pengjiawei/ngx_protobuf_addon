/* Generated by protobuf-nginx 1.1 - DO NOT EDIT */

#ifndef _NGX_PLAN_PROTO_H_INCLUDED_
#define _NGX_PLAN_PROTO_H_INCLUDED_
extern "C"{
#include <stdint.h>
#include <ngx_config.h>
#include <ngx_string.h>
#include <ngx_array.h>
#include <ngx_palloc.h>
#include <ngx_rbtree.h>
#include <ngx_protobuf.h>
}
/* Point */

typedef struct {
    uint32_t     x;
    uint32_t     y;
    /* ngx_protobuf_unknown_field_t */
    ngx_array_t *__unknown;
    uint32_t     __has_x : 1;
    uint32_t     __has_y : 1;
} ngx_point_t;

/* Plan */

typedef struct {
    /* ngx_point_t */
    ngx_array_t *point;
    /* ngx_protobuf_unknown_field_t */
    ngx_array_t *__unknown;
    uint32_t     __has_point : 1;
} ngx_plan_t;

/* Point field methods */

#define ngx_point__set_x(obj, val) \
    NGX_PROTOBUF_SET_NUMBER(obj, x, val)

#define ngx_point__clear_x(obj) \
    NGX_PROTOBUF_CLEAR_NUMBER(obj, x)

#define ngx_point__has_x(obj) \
    (NGX_PROTOBUF_HAS_FIELD(obj, x))

#define ngx_point__set_y(obj, val) \
    NGX_PROTOBUF_SET_NUMBER(obj, y, val)

#define ngx_point__clear_y(obj) \
    NGX_PROTOBUF_CLEAR_NUMBER(obj, y)

#define ngx_point__has_y(obj) \
    (NGX_PROTOBUF_HAS_FIELD(obj, y))

/* Point message methods */

#define ngx_point__alloc(pool) \
    ngx_pcalloc(pool, \
    sizeof(ngx_point_t))

#define ngx_point__clear(obj) \
    ngx_memzero(obj, sizeof(ngx_point_t))

ngx_int_t ngx_point__is_initialized(
    ngx_point_t *obj);

ngx_int_t ngx_point__unpack(
    ngx_point_t *obj,
    ngx_protobuf_context_t *ctx);

size_t ngx_point__size(
    ngx_point_t *obj);

ngx_int_t ngx_point__pack(
    ngx_point_t *obj,
    ngx_protobuf_context_t *ctx);

/* Plan field methods */

#define ngx_plan__set_point(obj, val) \
    NGX_PROTOBUF_SET_MEMBER(obj, point, val)

ngx_point_t *
ngx_plan__add__point(
    ngx_plan_t *obj,
    ngx_pool_t *pool);

#define ngx_plan__clear_point(obj) \
    NGX_PROTOBUF_CLEAR_MEMBER(obj, point)

#define ngx_plan__has_point(obj) \
    (NGX_PROTOBUF_HAS_FIELD(obj, point) && \
     (obj)->point->nelts > 0)

/* Plan message methods */

#define ngx_plan__alloc(pool) \
    ngx_pcalloc(pool, \
    sizeof(ngx_plan_t))

#define ngx_plan__clear(obj) \
    ngx_memzero(obj, sizeof(ngx_plan_t))

ngx_int_t ngx_plan__is_initialized(
    ngx_plan_t *obj);

ngx_int_t ngx_plan__unpack(
    ngx_plan_t *obj,
    ngx_protobuf_context_t *ctx);

size_t ngx_plan__size(
    ngx_plan_t *obj);

ngx_int_t ngx_plan__pack(
    ngx_plan_t *obj,
    ngx_protobuf_context_t *ctx);

#endif /* _NGX_PLAN_PROTO_H_INCLUDED_ */
