/* Generated by protobuf-nginx 1.1 - DO NOT EDIT */

#ifndef _NGX_CONTROL_PROTO_H_INCLUDED_
#define _NGX_CONTROL_PROTO_H_INCLUDED_
extern "C"{
#include <stdint.h>
#include <ngx_config.h>
// #include <ngx_string.h>
// #include <ngx_array.h>
// #include <ngx_palloc.h>
// #include <ngx_rbtree.h>
#include <ngx_protobuf.h>
}
/* ControlCode */

typedef struct {
    uint32_t     opt_code;
    /* ngx_protobuf_unknown_field_t */
    ngx_array_t *__unknown;
    uint32_t     __has_opt_code : 1;
} ngx_control_code_t;

/* ErrorCode */

typedef struct {
    uint32_t     error_code;
    /* ngx_protobuf_unknown_field_t */
    ngx_array_t *__unknown;
    uint32_t     __has_error_code : 1;
} ngx_error_code_t;

/* ControlCode field methods */

#define ngx_control_code__set_opt_code(obj, val) \
    NGX_PROTOBUF_SET_NUMBER(obj, opt_code, val)

#define ngx_control_code__clear_opt_code(obj) \
    NGX_PROTOBUF_CLEAR_NUMBER(obj, opt_code)

#define ngx_control_code__has_opt_code(obj) \
    (NGX_PROTOBUF_HAS_FIELD(obj, opt_code))

/* ControlCode message methods */

#define ngx_control_code__alloc(pool) \
    ngx_pcalloc(pool, \
    sizeof(ngx_control_code_t))

#define ngx_control_code__clear(obj) \
    ngx_memzero(obj, sizeof(ngx_control_code_t))

ngx_int_t ngx_control_code__is_initialized(
    ngx_control_code_t *obj);

ngx_int_t ngx_control_code__unpack(
    ngx_control_code_t *obj,
    ngx_protobuf_context_t *ctx);

size_t ngx_control_code__size(
    ngx_control_code_t *obj);

ngx_int_t ngx_control_code__pack(
    ngx_control_code_t *obj,
    ngx_protobuf_context_t *ctx);

/* ErrorCode field methods */

#define ngx_error_code__set_error_code(obj, val) \
    NGX_PROTOBUF_SET_NUMBER(obj, error_code, val)

#define ngx_error_code__clear_error_code(obj) \
    NGX_PROTOBUF_CLEAR_NUMBER(obj, error_code)

#define ngx_error_code__has_error_code(obj) \
    (NGX_PROTOBUF_HAS_FIELD(obj, error_code))

/* ErrorCode message methods */

#define ngx_error_code__alloc(pool) \
    ngx_pcalloc(pool, \
    sizeof(ngx_error_code_t))

#define ngx_error_code__clear(obj) \
    ngx_memzero(obj, sizeof(ngx_error_code_t))

ngx_int_t ngx_error_code__is_initialized(
    ngx_error_code_t *obj);

ngx_int_t ngx_error_code__unpack(
    ngx_error_code_t *obj,
    ngx_protobuf_context_t *ctx);

size_t ngx_error_code__size(
    ngx_error_code_t *obj);

ngx_int_t ngx_error_code__pack(
    ngx_error_code_t *obj,
    ngx_protobuf_context_t *ctx);

#endif /* _NGX_CONTROL_PROTO_H_INCLUDED_ */
